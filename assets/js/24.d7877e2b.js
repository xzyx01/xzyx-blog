(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{449:function(s,t,l){"use strict";l.r(t);var v=l(2),_=Object(v.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"浏览器输入-url-后发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器输入-url-后发生了什么"}},[s._v("#")]),s._v(" "),t("strong",[s._v("浏览器输入 url 后发生了什么？")])]),s._v(" "),t("ol",[t("li",[s._v("浏览器首先会查找当前的 url 是否有缓存。如果存在缓存，会检查缓存是否过期，未过期直接使用。")]),s._v(" "),t("li",[s._v("如果不存在缓存，会通过 "),t("code",[s._v("DNS")]),s._v(" 解析 url 获取真实的 "),t("code",[s._v("ip")])]),s._v(" "),t("li",[s._v("根据拿到的 ip 三次握手建立 tcp 连接")]),s._v(" "),t("li",[s._v("连接成功后，浏览器获取资源，渲染页面")]),s._v(" "),t("li",[s._v("渲染完成后，四次挥手关闭 tcp 连接")])]),s._v(" "),t("h3",{attrs:{id:"浏览器是怎么渲染页面的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是怎么渲染页面的"}},[s._v("#")]),s._v(" "),t("strong",[s._v("浏览器是怎么渲染页面的？")])]),s._v(" "),t("ul",[t("li",[s._v("浏览器的渲染主要由 html 解析器、css 解析器、js 引擎、布局模块、绘图模块、浏览器完成。")]),s._v(" "),t("li",[s._v("各部分功能如下：\n"),t("ol",[t("li",[s._v("html 解析器主要解析 html 标签以及内联的 style，生成 dom 树")]),s._v(" "),t("li",[s._v("css 解析器主要解析 link 里面的外链样式，生成 css 树")]),s._v(" "),t("li",[s._v("js 引擎主要进行一些事件的绑定，同时也有可能修改 dom 树和 css 树")]),s._v(" "),t("li",[s._v("布局模块主要是根据前面生成的 dom 树和 css 树生成 render 树")]),s._v(" "),t("li",[s._v("浏览器主要是请求资源，如图片、字体、音频等\n6.绘图模块会根据生成的 render 树和获取的资源进行页面渲染")])])]),s._v(" "),t("li",[s._v("各部分执行的优先级"),t("br"),s._v("\n解析过程中，如果遇到 script 标签，html 解析器和 css 解析器会停止解析，直到 js 引擎执行完毕之后才会继续解析（因为在 js 解析阶段，有可能会修改 css 和 html，为了防止 css 和 html 的无效解析，会等到 js 解析完成之后才会继续解析）")])])])}),[],!1,null,null,null);t.default=_.exports}}]);