(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{460:function(e,t,o){"use strict";o.r(t);var n=o(2),v=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"vue3-的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue3-的生命周期"}},[e._v("#")]),e._v(" "),t("strong",[e._v("vue3 的生命周期")])]),e._v(" "),t("ul",[t("li",[e._v("初始化（setup）: onBeforeCreate 和 onCreaate 的结合")])]),e._v(" "),t("blockquote",[t("p",[e._v("script setup 是 vue3 的语法糖，简化了组合式 api 的写法，并且运行性能更高。具有以下特点：")]),e._v(" "),t("ul",[t("li",[e._v("属性和方法无需返回，直接使用")]),e._v(" "),t("li",[e._v("引入组件的时候，会自动注册")]),e._v(" "),t("li",[e._v("使用 defineProps 接收父组件传递的值")]),e._v(" "),t("li",[e._v("使用 useAttrs 获取属性，useSlots 获取插槽，defineEmits 获取自定义事件")]),e._v(" "),t("li",[e._v("默认不会对外暴露任何属性，需要使用 defineExpose 进行暴露")])])]),e._v(" "),t("ul",[t("li",[e._v("渲染：onBeforeMount 和 onMounted")]),e._v(" "),t("li",[e._v("更新：onBeforeUpdate 和 onUpdated")]),e._v(" "),t("li",[e._v("销毁：onBeforeUnmount 和 onUnmounted")]),e._v(" "),t("li",[e._v("keep-alive: onActivated（组件激活），onDeactivated（组件失活）")])])])}),[],!1,null,null,null);t.default=v.exports}}]);